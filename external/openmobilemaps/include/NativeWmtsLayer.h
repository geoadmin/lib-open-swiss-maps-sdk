// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wmts.djinni

#pragma once

#include "WmtsLayer.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeWmtsLayer final {
public:
    using CppType = ::WmtsLayer;
    using JniType = jobject;

    using Boxed = NativeWmtsLayer;

    ~NativeWmtsLayer();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeWmtsLayer();
    friend ::djinni::JniClass<NativeWmtsLayer>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/tiled/WmtsLayer") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Lio/openmobilemaps/mapscore/shared/map/coordinates/RectCoord;Ljava/util/ArrayList;)V") };
    const jfieldID field_indentifier { ::djinni::jniGetFieldID(clazz.get(), "indentifier", "Ljava/lang/String;") };
    const jfieldID field_urlFormat { ::djinni::jniGetFieldID(clazz.get(), "urlFormat", "Ljava/lang/String;") };
    const jfieldID field_bounds { ::djinni::jniGetFieldID(clazz.get(), "bounds", "Lio/openmobilemaps/mapscore/shared/map/coordinates/RectCoord;") };
    const jfieldID field_dimensions { ::djinni::jniGetFieldID(clazz.get(), "dimensions", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
